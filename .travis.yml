# Copyright 2012-2019 the Pacemaker project contributors
#
# The version control history for this file may have further details.

# Control file for the Travis autobuilder
# https://docs.travis-ci.com/user/customizing-the-build/

language: c

# We build with both gcc and clang. If MAINT_EXTRA=1 (gcc only), the
# schema regression tests will additionally be run.
matrix:
  include:
    - compiler: gcc
      env:      MAINT_EXTRA=0
      arch:     arm64  

cache:
  directories:
  - xml/.relaxng.org

# sudo add-apt-repository ppa:hotot-team
before_install:
- env && false
- if [ "$TRAVIS_ARCH" == "ppc64le" -o "$TRAVIS_ARCH" == "arm64" ]; then sudo add-apt-repository "deb http://ports.ubuntu.com/ubuntu-ports/ trusty main"; sudo apt-get update -qq; fi
- if [ "$TRAVIS_ARCH" == "amd64" ]; then sudo add-apt-repository "deb http://archive.ubuntu.com/ubuntu/ trusty main"; sudo apt-get update -qq; fi

# To switch to Travis-CI's containerized (non-sudo) architecture,
# all our dependencies need to be on Travis's whitelist:
#   https://github.com/travis-ci/apt-package-whitelist
#
# The only ones that aren't already are:
# - cluster-glue-dev: see open issue:
#   https://github.com/travis-ci/apt-package-whitelist/issues/2936
# - resource-agents: see open issue:
#   https://github.com/travis-ci/apt-package-whitelist/issues/4261
# - libdbus-1-dev: see multiple open issues:
#   https://github.com/travis-ci/apt-package-whitelist/issues?utf8=%E2%9C%93&q=is%3Aissue+libdbus+-1-dev
#   (a workaround is to install libdbus-glib-1-dev, which depends on it and is whitelisted)
install:
 - sudo apt-get install -qq
      automake autoconf libtool
      psmisc procps python3 python3-dev
      libbz2-dev libdbus-1-dev libglib2.0-dev libgnutls-dev libltdl-dev
      libncurses5-dev libpam0g-dev libxml2-dev libxslt1-dev uuid-dev
      libqb-dev libcfg-dev libcmap-dev libcorosync-common-dev libcpg-dev
      libquorum-dev libsam-dev libtotem-pg-dev libvotequorum-dev
      cluster-glue-dev resource-agents
 - test $MAINT_EXTRA -eq 0 || sudo apt-get install -qq libxml2-utils xsltproc

before_script:
 - lscpu
# some tests (e.g. cts-exec-helper) require actual system-wide credentials
 -   ./autogen.sh
 -   ./configure --with-daemon-user=nobody --with-daemon-group=nogroup
      --libexecdir=/usr/lib/pacemaker
      --with-configdir=/etc/default

script: 
# Create directories needed by commands used by regression tests
- sudo make install-exec-local || true
- make
- make check
- ./cts/cts-cli -V
- ./cts/cts-scheduler -V
- sudo ./cts/cts-exec -V --force-wait
- test $MAINT_EXTRA -eq 0 ||
  { { echo 'looking for presence of control characters...';
      { git ls-files
        | grep -v tap-driver.sh
        | xargs grep -Ensv "^([^[:cntrl:]]*|$(printf '\t'))*$"||:; } 2>/dev/null
        | { ! grep -Ev '^Binary file' && echo 'ALL OK'; };
    } && (
      cd xml;
      ./regression.sh && ./regression.sh -B && ./regression.sh -S && {
        schemas=; for schema in *.rng; do
          case ${schema} in *cibtr*);; *)schemas="${schemas} ${schema}";; esac;
        done;
        test -s .relaxng.org/relaxng.rng 2>/dev/null
          || curl --create-dirs -SsLo .relaxng.org/relaxng.rng
             'https://raw.githubusercontent.com/relaxng/relaxng.org/master/relaxng.rng';
        xmllint --noout --relaxng .relaxng.org/relaxng.rng ${schemas};
      }
    );
  }

#after_script:
#after_success:

after_failure:
 - lsb_release -a
 - sudo cat /etc/apt/sources.list
 - whoami
 - env | sort 
 - cat include/config.h

#notifications:
#  irc: "irc.freenode.org#pcmk"
#  email:
#    recipients:
#      - developers@clusterlabs.org

# whitelist
branches:
  only:
    - master
    - "2.1"
